dnl Process this file with autoconf to produce a configure script.

AC_REVISION($Revision: 1.9 $)

AC_INIT([DSL FAPI],[0.7.1],[],[dsl_cpe_fapi])

AC_CONFIG_SRCDIR(src/Makefile.am)
AM_INIT_AUTOMAKE([tar-pax])

AC_CONFIG_HEADER(src/dsl_fapi_config.h)
AH_TOP([
#ifndef _DSL_FAPI_CONFIG_H
#define _DSL_FAPI_CONFIG_H])
AH_BOTTOM([
#endif /* _DSL_FAPI_CONFIG_H */])

# Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AM_PROG_CC_C_O

AC_PROG_INSTALL
AC_PROG_LN_S
AM_PROG_INSTALL_STRIP
AC_PROG_LIBTOOL

AC_CHECK_HEADERS([vendor.h],
                 [ugw_vendor_path=yes; break;])
AS_IF([test "x$ugw_vendor_path" = "xyes"],
      AC_DEFINE([UGW_VENDOR_PATH],[1], [Available vendor information]))

#
# save the configure arguments
#
CONFIGURE_OPTIONS="$ac_configure_args"
AC_SUBST(CONFIGURE_OPTIONS)

dnl set lib_ifxos include path
DEFAULT_IFXOS_INCLUDE_PATH=''
AC_ARG_ENABLE(ifxos-include,
   AS_HELP_STRING([--enable-ifxos-include=-I/path/to/your/lib_ifxos/src/include],[set the lib_ifxos include path]),
   [
    if test -n "$enableval"; then
       echo Set the lib_ifxos include path to $enableval
       AC_SUBST([IFXOS_INCLUDE_PATH],[$enableval])
    else
       echo Set the lib_ifxos include path to $DEFAULT_IFXOS_INCLUDE_PATH
       AC_SUBST([IFXOS_INCLUDE_PATH],[$DEFAULT_IFXOS_INCLUDE_PATH])
    fi
   ],
   [
      echo Set the lib_ifxos include path to $DEFAULT_IFXOS_INCLUDE_PATH
      AC_SUBST([IFXOS_INCLUDE_PATH],[$DEFAULT_IFXOS_INCLUDE_PATH])
   ]
)

dnl enable VRX support
AC_ARG_ENABLE(vrx,
    AC_HELP_STRING(
        [--enable-vrx],[Add VRX support.]
    ),
    [
        if test "$enableval" = yes; then
            AC_DEFINE(INCLUDE_DSL_CPE_API_VRX,,[Add VRX support])
            AM_CONDITIONAL(DEVICE_VRX, true)
            AM_CONDITIONAL(DEVICE_VRX_LAYER, true)
            AC_SUBST([DSL_DEVICE_NAME],[VRX])
        fi
   ]
)


dnl set lib_ifxos library path
DEFAULT_IFXOS_LIBRARY_PATH=''
AC_ARG_ENABLE(ifxos-library,
   AS_HELP_STRING([--enable-ifxos-library=-L/path/to/your/lib_ifxos/src],[set the lib_ifxos library path]),
   [
    if test -n "$enableval"; then
       echo Set the lib_ifxos library path to $enableval
       AC_SUBST([IFXOS_LIBRARY_PATH],[$enableval])
    else
       echo Set the lib_ifxos library path to $DEFAULT_IFXOS_LIBRARY_PATH
       AC_SUBST([IFXOS_LIBRARY_PATH],[$DEFAULT_IFXOS_LIBRARY_PATH])
    fi
   ],
   [
      echo Set the lib_ifxos library path to $DEFAULT_IFXOS_LIBRARY_PATH
      AC_SUBST([IFXOS_LIBRARY_PATH],[$DEFAULT_IFXOS_LIBRARY_PATH])
   ]
)

dnl set cli library path
DEFAULT_LIB_CLI_LIBRARY_PATH=''
AC_ARG_ENABLE(cli-library,
   AS_HELP_STRING([--enable-cli-library=/path/to/your/libcli/src] , [Set the libcli.a library path. In this location the libcli.a should be found]),
   [
      if test -n "$enableval"; then
         echo Set the libcli.a library path to $enableval
         AC_SUBST([LIB_CLI_LIBRARY_PATH],[$enableval])
      else
         echo Set the libcli.a library path $DEFAULT_LIB_CLI_LIBRARY_PATH
         AC_SUBST([LIB_CLI_LIBRARY_PATH],[$DEFAULT_LIB_CLI_LIBRARY_PATH])
      fi
   ],
   [
      echo Set the libcli.a library path $DEFAULT_LIB_CLI_LIBRARY_PATH
      AC_SUBST([LIB_CLI_LIBRARY_PATH],[$DEFAULT_LIB_CLI_LIBRARY_PATH])
   ]
)

dnl set cli include path
DEFAULT_LIB_CLI_INCLUDE_PATH=''
AC_ARG_ENABLE(cli-include,
   AS_HELP_STRING([--enable-cli-include=-I/path/to/your/libcli/src/include],[Set the libcli.a include path.]),
   [
      if test -n "$enableval"; then
         echo Set the libcli.a include path $enableval
         AC_SUBST([LIB_CLI_INCLUDE_PATH],[$enableval])
      else
         echo -e Set the default libcli.a include path $DEFAULT_LIB_CLI_INCLUDE_PATH
         AC_SUBST([LIB_CLI_INCLUDE_PATH],[$DEFAULT_LIB_CLI_INCLUDE_PATH])
      fi
   ],
   [
      echo -e Set the default libcli.a include path $DEFAULT_LIB_CLI_INCLUDE_PATH
      AC_SUBST([LIB_CLI_INCLUDE_PATH],[$DEFAULT_LIB_CLI_INCLUDE_PATH])
   ]
)


dnl enable\disable debug printouts
AC_ARG_ENABLE(debug-prints,
              AS_HELP_STRING([--enable-debug-prints],[enable debug printouts]),
   [
      if test "$enableval" = yes; then
         echo Enable debug printouts
      else
         AC_DEFINE([FAPI_DEBUG_DISABLE], [1],[Disable debug printouts])
         echo Disable debug printouts
      fi
   ],
   [
      AC_DEFINE([FAPI_DEBUG_DISABLE], [1],[Disable debug printouts])
      echo Disable debug printouts
   ]
)

dnl enable DSL FAPI daemon CLI application
AC_ARG_ENABLE(dsl-fapi-daemon,
    AC_HELP_STRING([--enable-dsl-fapi-daemon=x],[Build DSL FAPI daemon with CLI]),
    [
        case $enableval in
        0|no)
    AM_CONDITIONAL(DSL_FAPI_DAEMON_CLI, false)
         AC_SUBST([DSL_FAPI_DAEMON_CLI],[no])
            ;;
        1|yes)
    AM_CONDITIONAL(DSL_FAPI_DAEMON_CLI, true)
         AC_SUBST([DSL_FAPI_DAEMON_CLI],[yes])
            ;;
        *)
    AM_CONDITIONAL(DSL_FAPI_DAEMON_CLI, false)
         AC_SUBST([DSL_FAPI_DAEMON_CLI],[no])
            ;;
        esac
    ],
    [
        AM_CONDITIONAL(DSL_FAPI_DAEMON_CLI, true)
        AC_SUBST([DSL_FAPI_DAEMON_CLI],[yes])
    ]
)

dnl enable\disable cli support
AC_SUBST([INCLUDE_CLI_SUPPORT],[no])
AC_ARG_ENABLE(cli,
              AS_HELP_STRING([--enable-cli],
                             [enable CLI support]),
   [
      if test "$enableval" = yes; then
         AC_DEFINE([INCLUDE_CLI_SUPPORT], [1], [Enable CLI support])
         AC_SUBST([INCLUDE_CLI_SUPPORT],[$enableval])
         AM_CONDITIONAL(INCLUDE_CLI_SUPPORT, true)
         echo Enable CLI support
      else
         AM_CONDITIONAL(INCLUDE_CLI_SUPPORT, false)
         echo Disable CLI support
      fi
   ],
   [
      AM_CONDITIONAL(INCLUDE_CLI_SUPPORT, false)
      echo Disable CLI support
   ]
)

dnl enable\disable cli pipe support
AC_ARG_ENABLE(cli-pipe,
              AS_HELP_STRING([--enable-cli-pipe],
                             [enable CLI PIPE support (in order to include pipe support, you should also enable CLI support)]),
   [
      if test "$enableval" = yes; then
         if test "$INCLUDE_CLI_SUPPORT" = "no"; then
            AC_MSG_WARN(["In order to include pipe support, you should enable CLI support!"])
            echo Disable CLI pipe support
         else
            AC_DEFINE([INCLUDE_CLI_PIPE_SUPPORT], [1],[Enable pipe support])
            echo Enable CLI pipe support
         fi
      else
         echo Disable CLI pipe support
      fi
   ],
   [
      echo Disable CLI pipe support
   ]
)


dnl set DSL-API include path
DEFAULT_DSL_API_INCLUDE_PATH=''
AC_ARG_ENABLE(dsl-api-include,
   AS_HELP_STRING([--enable-dsl-api-include=-I/path/to/your/lib_dsl_api/src/include],[set the lib_dsl_api include path]),
   [
    if test -n "$enableval"; then
       echo Set the lib_dsl_api include path to $enableval
       AC_SUBST([DSL_API_INCLUDE_PATH],[$enableval])
    else
       echo Set the lib_dsl_api include path to $DEFAULT_DSL_API_INCLUDE_PATH
       AC_SUBST([DSL_API_INCLUDE_PATH],[$DEFAULT_DSL_API_INCLUDE_PATH])
    fi
   ],
   [
      echo Set the lib_dsl_api include path to $DEFAULT_DSL_API_INCLUDE_PATH
      AC_SUBST([DSL_API_INCLUDE_PATH],[$DEFAULT_DSL_API_INCLUDE_PATH])
   ]
)

dnl set DSL_API library path
DEFAULT_DSL_API_LIBRARY_PATH=''
AC_ARG_ENABLE(dsl-api-library,
   AS_HELP_STRING([--enable-dsl-api-library=-L/path/to/your/lib_dsl_api/src],[set the lib_dsl_api library path]),
   [
    if test -n "$enableval"; then
       echo Set the lib_dsl_api library path to $enableval
       AC_SUBST([DSL_API_LIBRARY_PATH],[$enableval])
    else
       echo Set the lib_dsl_api library path to $DEFAULT_DSL_API_LIBRARY_PATH
       AC_SUBST([DSL_API_LIBRARY_PATH],[$DEFAULT_DSL_API_LIBRARY_PATH])
    fi
   ],
   [
      echo Set the lib_dsl_api library path to $DEFAULT_DSL_API_LIBRARY_PATH
      AC_SUBST([DSL_API_LIBRARY_PATH],[$DEFAULT_DSL_API_LIBRARY_PATH])
   ]
)


dnl set driver include path
DEFAULT_DRIVER_INCLUDE_PATH=''
AC_ARG_ENABLE(driver-include,
   AS_HELP_STRING([--enable-driver-include=-I/path/to/your/driver/include],[set the driver include path]),
   [
    if test -n "$enableval"; then
       echo Set the driver include path to $enableval
       AC_SUBST([DRIVER_INCLUDE_PATH],[$enableval])

    else
       echo Set the driver include path to $DEFAULT_DRIVER_INCLUDE_PATH
       AC_SUBST([DRIVER_INCLUDE_PATH],[$DEFAULT_DRIVER_INCLUDE_PATH])
    fi
   ],
   [
      echo Set the driver include path to $DEFAULT_DRIVER_INCLUDE_PATH
      AC_SUBST([DRIVER_INCLUDE_PATH],[$DEFAULT_DRIVER_INCLUDE_PATH])
   ]
)

dnl set FAPI include path
DEFAULT_FAPI_INCL_PATH=''
AC_ARG_ENABLE(dsl-fapi-include,
   AS_HELP_STRING(
      [--enable-dsl-fapi-include= -I/path/to/your/FAPI/include],[Set the FAPI include path]
   ),
   [
    if test -n "$enableval"; then
       echo Set the FAPI include path to $enableval
       AC_SUBST([FAPI_INCL_PATH],[$enableval])
    else
       echo Set the FAPI include path to $DEFAULT_FAPI_INCL_PATH
       AC_SUBST([FAPI_INCL_PATH],[$DEFAULT_FAPI_INCL_PATH])
    fi
   ],
   [
      AC_MSG_WARN([Please provide include path to FAPI!])
   ]
)

dnl set FAPI library path
DEFAULT_FAPI_LIBRARY_PATH=''
AC_ARG_ENABLE(dsl-fapi-library,
   AS_HELP_STRING([--enable-dsl-fapi-library= -L/path/to/your/FAPI/library],
                  [Set the FAPI library path. In this location the libdslfapi.so should be found]
   ),
   [
    if test -n "$enableval"; then
       echo Set the libdslfapi.so library path to $enableval
       AC_SUBST([FAPI_LIBRARY_PATH],[$enableval])
    else
       echo Set the libdslfapi.so library path $DEFAULT_FAPI_LIBRARY_PATH
       AC_SUBST([FAPI_LIBRARY_PATH],[$DEFAULT_FAPI_LIBRARY_PATH])
    fi
   ],
   [
      AC_MSG_WARN([Please provide the path to libdslfapi.so, otherwise linking might not work!])
   ]
)

dnl enable SAFE C support
AM_CONDITIONAL(SAFEC_SUPPORT, false)
AC_SUBST([SAFEC_SUPPORT],[no])
AC_ARG_ENABLE(safec-support,
   AC_HELP_STRING([--enable-safec-support=x],[Enable SAFE C support]),
   [
      if test "$enableval" = yes; then
         AC_CHECK_HEADERS([safe_lib.h],[safec_header_support=yes; break;],,)
         AC_SUBST([SAFEC_LIB_NAME],[safec-1.0])
         AC_SUBST([SAFEC_LIB_FUNC],[strcat_s])
         AC_CHECK_LIB($SAFEC_LIB_NAME, $SAFEC_LIB_FUNC,[safec_lib_support=yes; break;],,,)

         if test "x$safec_header_support" = "xyes"; then
            if test "x$safec_lib_support" = "xyes"; then
               AC_DEFINE([SAFEC_SUPPORT], [1], [Safe-C supported])
               AM_CONDITIONAL(SAFEC_SUPPORT, true)
               AC_SUBST([SAFEC_SUPPORT],[yes])
            fi
         fi
      fi
   ],
)

dnl set system SAFE C include path
DEFAULT_SAFEC_INCL_PATH=''
AC_ARG_ENABLE(safec-include,
   AS_HELP_STRING(
      [--enable-safec-include= -I./STAGING_DIR/usr/include],[Set the SAFE C include path]
   ),
   [
      if test -n "$enableval"; then
         echo Set the SAFE C include path to $enableval
         AC_SUBST([SAFEC_INCL_PATH],[$enableval])

      else
         AC_SUBST([SAFEC_INCL_PATH],[$DEFAULT_SAFEC_INCL_PATH])
      fi
   ],
   [
      AC_SUBST([SAFEC_INCL_PATH],[$DEFAULT_SAFEC_INCL_PATH])
   ]
)

dnl set system SAFE C library path
DEFAULT_SAFEC_LIB_PATH=''
AC_ARG_ENABLE(safec-library,
   AS_HELP_STRING(
      [--enable-safec-library= -L./STAGING_DIR/usr/lib],[Set the SAFE C
      library path]
   ),
   [
      if test -n "$enableval"; then
         echo Set the SAFE C library path to $enableval
         AC_SUBST([SAFEC_LIB_PATH],[$enableval])

      else
         AC_SUBST([SAFEC_LIB_PATH],[$DEFAULT_SAFEC_LIB_PATH])
      fi
   ],
   [
      AC_SUBST([SAFEC_LIB_PATH],[$DEFAULT_SAFEC_LIB_PATH])
   ]
)

if test -n "$EXTRA_VERSION"; then
   AC_DEFINE_UNQUOTED([EXTRA_VERSION], ["$EXTRA_VERSION"], [extra version])
fi

AC_CONFIG_FILES([Makefile src/Makefile tools/Makefile])
#AC_CONFIG_FILES([Makefile src/Makefile])
AC_OUTPUT
